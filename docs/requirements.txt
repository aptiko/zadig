.. _requirements:

Requirements and principles for TwistyCMS
=========================================

These are the requirements for Version 1.0 of TwistyCMS:

* Must provide most of Plone's default objects; namely folders, pages,
  images, files, news, and events. These objects must have all the
  attributes that Plone gives them, in order to ease migration from Plone
  without loss of data.

* Must provide Plone's four basic portlets, namely navigation, news,
  upcoming events, and calendar.

* Must provide Plone's permissions and workflow model.

* Must be truly multilingual from the ground up. LinguaPlone-like
  functionality must be present out of the box without the need to
  install any further plugins.

* Must have Plone migration functionality out of the box.

* Must be at least 5 times better than Plone in terms of memory
  consumption, response times, and startup time.

* PostgreSQL shall be well-supported. Although other RDBMS's may be supported
  through Django's ORM, there will be no warranty and no database upgrade
  script between versions, unless Django gets to provide that functionality.

* No duplication of functionality from Django. User authentication, session
  management, etc., all done at the Django level. Wherever Django's
  functionality is insufficient, improvements will preferably be contributed to
  Django rather than to TwistyCMS.

* Great documentation, faithful to the tradition of Python and Django.

* End product, not a platform. Other applications shall be written on Django,
  not on TwistyCMS. But this does not mean that TwistyCMS's APIs won't be
  perfectly documented, or that some good practices for customizations will
  not be provided.

* Configuration through either a file or a well-documented API. Configuration
  through the web, if present, will only be an additional, secondary accessory.
